<?php
/**
*
* CreatePQR helper
*/


/**
* CreatePQR content class
*/

 // Cargamos wordpress
require_once( explode( "wp-content" , __FILE__ )[0] . "wp-load.php" );

class uploadImg{

	private $reponse;
	public $idFolder = '';


	public function __construct(){

	}

	/*
	|-------------------------------------------------------------------------------
	| Function to Registro User
	|-------------------------------------------------------------------------------
	*/
	public function Insert_Img( $files ){

		$boolRegister =	array(
								'validate' => false
							, 	'upload' => true
							, 	'html' => ''
							,	'urlImg' => ''
							,	'arrayFiles' => array()
						);

		

		$boolRegister['validate'] = true;
		
		
		if ( is_array( $files ) && ! empty( $files ) ) {

				$this->idFolder = $IdCase;
				$uploadArchive = $this->UpdateArchive( $files );

				$arrayUrlArchive =  array();
				$arrayErrors =  '';

				$iFilenum = 1;

				
				foreach ( $uploadArchive as $key => $value ) {
					if ( $value['validate'] ) {

						$nameFiles = $value['name'];
						$boolRegister['urlImg']  = $value['url'];
						
					}else{
						$arrayErrors .= $value['name'].': '.$value['error'].'<br>';
					}

					$iFilenum++;
				}
				
				if ( ! empty( $arrayErrors ) ) {

					$boolRegister['html'] = $arrayErrors;

				}

				if ( ! empty( $arrayUrlArchive ) ) {

					$datosarray = maybe_serialize( $arrayUrlArchive );

					$wpdb->update( $tbwp, array( 'archives' => $datosarray ), array( 'ID' => $IdCase ) );
				}
				

		}else{
			$boolRegister['upload'] = false;
		}
		
		

		

		return $boolRegister;

	}


	/*
	|-------------------------------------------------------------------------------
	| Function Subir Archivos al Servidor
	|-------------------------------------------------------------------------------
	*/
	public function UpdateArchive ( $files ){

		if ( ! function_exists( 'wp_handle_upload' ) ) {
		    require_once( ABSPATH . 'wp-admin/includes/file.php' );
		}

		$reponseFiles = array();

		$allowed_file_types = array(
									'pdf' 				=>'application/pdf'
								,	'doc' 				=>'application/msword'
								,	'avi' 				=>'video/avi'
								,	'docx' 				=>'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
								,	'jpg|jpeg|jpe' 		=>'image/jpeg'
								,	'mp4|m4v' 			=>'video/mp4'
								,	'png' 				=>'image/png'
								,	'pot|pps|ppt' 		=>'application/vnd.ms-powerpoint'
								,	'pptx' 				=>'application/vnd.openxmlformats-officedocument.presentationml.presentation'
								,	'xla|xls|xlt|xlw' 	=>'application/vnd.ms-excel'
								,	'xlsx' 				=>'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
							);

		$upload_overrides = array( 'test_form' => false, 'mimes' => $allowed_file_types );

		add_filter('wp_handle_upload_prefilter', array( $this, 'upload_prefilter_custom' ), 10, 1 );
		add_filter('upload_dir', array( $this, 'my_upload_dir' ) );

		$iFiles = 1;

		foreach ($files['name'] as $key => $value) {

			if ($files['name'][$key]) {

				$uploadedfile = array(
							'name'     => $files['name'][$key]
						,	'type'     => $files['type'][$key]
						,	'tmp_name' => $files['tmp_name'][$key]
						,	'error'    => $files['error'][$key]
						,	'size'     => $files['size'][$key]
						);

		        $movefile = wp_handle_upload( $uploadedfile, $upload_overrides );

		        if ( $movefile && ! isset( $movefile['error'] ) ) {

				    $reponseFiles[$iFiles]['name'] = $files['name'][$key];
				    $reponseFiles[$iFiles]['url'] = $movefile['url'];
				    $reponseFiles[$iFiles]['validate'] = true;

				} else {
				    /**
				     * Error generated by _wp_handle_upload()
				     * @see _wp_handle_upload() in wp-admin/includes/file.php
				     */
				    $reponseFiles[$iFiles]['name'] = $files['name'][$key];
				    $reponseFiles[$iFiles]['validate'] = false;
				    $reponseFiles[$iFiles]['error'] = $movefile['error'];
				}

				$iFiles = $iFiles + 1;
			}
		}

		remove_filter('upload_dir', array( $this, 'my_upload_dir' ) );
		remove_filter('wp_handle_upload_prefilter', array( $this, 'upload_prefilter_custom' ), 10, 1 );

		return $reponseFiles;


	}
	/*
	|-------------------------------------------------------------------------------
	| Function Carpeta Archivo
	|-------------------------------------------------------------------------------
	*/

	public function my_upload_dir( $param ) {
	
		$idFolder = $this->idFolder;

		$param['path'] = $param['basedir'] . '/Hoja-vida-' . $idFolder;
		$param['url'] = $param['baseurl'] . '/Hoja-vida-' . $idFolder;

		if ( ! file_exists( $folderCase ) ) {
		    wp_mkdir_p( $folderCase, 0777 );
		}

	    error_log("path={$param['path']}");  
	    error_log("url={$param['url']}");
	    error_log("subdir={$param['subdir']}");
	    error_log("basedir={$param['basedir']}");
	    error_log("baseurl={$param['baseurl']}");
	    error_log("error={$param['error']}"); 

	    return $param;
	}

	/*
	|-------------------------------------------------------------------------------
	| Function Restrincion Tamaño Archivo
	|-------------------------------------------------------------------------------
	*/

	public function upload_prefilter_custom( $file ) {
	
		$limit = 20480; // sizee in KB (example)
		$size = $file['size'];
		$size = $size / 1024; // Calculate down to KB

	    if ( $size > $limit ) {

	      $file['error'] = 'Capacidad máxima por archivo es de 20 MB';

	    }

	    return $file;
	    
	}


}

?>
